rm(list = c("navbarMenuApp"))
rm(list = c("navbarMenuApp"))
devtools::document()
devtools::load_all()
library(JSbs4dash)
runApp('dev/tooltips')
runApp('dev/tooltips')
runApp('dev/tooltips')
usethis::use_r("toolTipApp")
toolTipApp <- function() {
ui <- shiny::tagList(
shiny::fluidPage(
shiny::tags$h1("JSbs4dash:", code("tooltips")),
shiny::sidebarLayout(
shiny::sidebarPanel(
# use mod_tooltip_var_input_ui -----
mod_tooltip_var_input_ui("vars")
),
shiny::mainPanel(
# add shiny hex in www/
shiny::tags$img(src = "shiny.png"),
JSbs4dash::mod_plot_ui("plot")
)
)
)
)
server <- function(input, output, session) {
# Your application server logic
selected_vars <- JSbs4dash::mod_var_input_server("vars")
JSbs4dash::mod_plot_server("plot", var_inputs = selected_vars)
}
shiny::shinyApp(
ui = ui, server = server)
}
toolTipApp()
devtools::load_all()
devtools::document()
library(JSbs4dash)
toolTipApp()
devtools::load_all()
rm(list = c("toolTipApp"))
devtools::load_all()
devtools::document()
library(JSbs4dash)
toolTipApp()
shiny::runApp('dev/navbar-color')
runApp('dev/navbar')
runApp('dev/navbar')
runApp('dev/navbar')
library(JSbs4dash)
prnt_rvals()
prnt_rvals("vals")
runApp('dev/navbar')
#' @param id namespace id
#'
#' @return code for UI and server components
#' @export prnt_rvals
#'
#' @importFrom rstudioapi insertText
#' @importFrom glue glue
#'
#' @examples
#' # prnt_rvals("dev")
prnt_rvals <- function(id) {
ui <- "\n\n# put in UI ----
shiny::fluidRow(
shiny::column(
width = 12,
shiny::tags$code('reactiveValuesToList''),
shiny::verbatimTextOutput(shiny::NS(namespace = id, id = '{id}'))
))"
server <- "\n\n# put in server ----
output${id} <- shiny::renderPrint({{
vals <- shiny::reactiveValuesToList(x = input, all.names = TRUE)
print(vals)
}})\n\n"
rstudioapi::insertText(glue::glue(ui, server))
}
prnt_rvals("dev")
#' @param id namespace id
#'
#' @return code for UI and server components
#' @export prnt_rvals
#'
#' @importFrom rstudioapi insertText
#' @importFrom glue glue
#'
#' @examples
#' # prnt_rvals("dev")
prnt_rvals <- function(id) {
ui <- "\n\n# put in UI ----
shiny::fluidRow(
shiny::column(
width = 12,
shiny::tags$code('reactiveValuesToList'),
shiny::verbatimTextOutput(shiny::NS(namespace = id, id = '{id}'))
))"
server <- "\n\n# put in server ----
output${id} <- shiny::renderPrint({{
vals <- shiny::reactiveValuesToList(x = input, all.names = TRUE)
print(vals)
}})\n\n"
rstudioapi::insertText(glue::glue(ui, server))
}
prnt_rvals("dev")
#' @param id namespace id
#'
#' @return code for UI and server components
#' @export prnt_rvals
#'
#' @importFrom rstudioapi insertText
#' @importFrom glue glue
#'
#' @examples
#' # prnt_rvals("dev")
prnt_rvals <- function(id) {
ui <- "\n\n# put in UI ----
shiny::fluidRow(
shiny::column(
width = 12,
shiny::tags$code('reactiveValuesToList'),
shiny::verbatimTextOutput(shiny::NS(namespace = id, id = '{id}'))
))"
server <- "\n\n# put in server ----\n\n
output$dev <- shiny::renderPrint({
vals <- shiny::reactiveValuesToList(
x = input, all.names = TRUE)
print(vals)
})\n\n"
rstudioapi::insertText(glue::glue(ui, server))
}
prnt_rvals("dev")
#' @param id namespace id
#'
#' @return code for UI and server components
#' @export prnt_rvals
#'
#' @importFrom rstudioapi insertText
#' @importFrom glue glue
#'
#' @examples
#' # prnt_rvals("dev")
prnt_rvals <- function(id) {
ui <- "\n\n# put in UI ----
shiny::fluidRow(
shiny::column(
width = 12,
shiny::tags$code('reactiveValuesToList'),
shiny::verbatimTextOutput(shiny::NS(namespace = id, id = '{id}'))
))"
server <- "\n\n# put in server ----\n\n
output$dev <- shiny::renderPrint({{
vals <- shiny::reactiveValuesToList(
x = input, all.names = TRUE)
print(vals)
}})\n\n"
rstudioapi::insertText(glue::glue(ui, server))
}
prnt_rvals("dev")
#' @param id namespace id
#'
#' @return code for UI and server components
#' @export prnt_rvals
#'
#' @importFrom rstudioapi insertText
#' @importFrom glue glue
#'
#' @examples
#' # prnt_rvals("dev")
prnt_rvals <- function(id) {
ui <- "\n\n# put in UI ----
shiny::fluidRow(
shiny::column(
width = 12,
shiny::tags$code('reactiveValuesToList'),
shiny::verbatimTextOutput(shiny::NS(namespace = id, id = '{id}'))
))"
server <- "\n\n# put in server ----\n
output$dev <- shiny::renderPrint({{
vals <- shiny::reactiveValuesToList(
x = input, all.names = TRUE)
print(vals)
}})\n\n"
rstudioapi::insertText(glue::glue(ui, server))
}
prnt_rvals("dev")
#' @param id namespace id
#'
#' @return code for UI and server components
#' @export prnt_rvals
#'
#' @importFrom rstudioapi insertText
#' @importFrom glue glue
#'
#' @examples
#' # prnt_rvals("dev")
prnt_rvals <- function(id) {
ui <- "\n\n# put in UI ----
shiny::fluidRow(
shiny::column(
width = 12,
shiny::tags$code('reactiveValuesToList'),
shiny::verbatimTextOutput(shiny::NS(namespace = id, id = '{id}'))
))"
server <- "\n\n# put in server ----
output$dev <- shiny::renderPrint({{
vals <- shiny::reactiveValuesToList(
x = input, all.names = TRUE)
print(vals)
}})\n\n"
rstudioapi::insertText(glue::glue(ui, server))
}
prnt_rvals("dev")
runApp('dev/navbar')
runApp('dev/navbar')
runApp('dev/navbar')
runApp('dev/navbar')
styler:::style_selection()
prnt_rvals <- function(id) {
ui <- "\n\n#   # put in UI ----
bs4Dash::box(
title = shiny::tags$code('{id} reactive values'),
collapsible = TRUE,
collapsed = TRUE,
shiny::fluidRow(shiny::column(
width = 12,
shiny::verbatimTextOutput(shiny::NS(namespace = id, id = '{id}'))
))
)"
server <- "\n\n# put in server ----
output${id} <- shiny::renderPrint({{
vals <- shiny::reactiveValuesToList(
x = input, all.names = TRUE)
print(vals)
}})\n\n"
rstudioapi::insertText(glue::glue(ui, server))
}
prnt_rvals("dev")
prnt_rvals("dev")
#' @param id namespace id
#'
#' @return code for UI and server components
#' @export prnt_rvals
#'
#' @importFrom rstudioapi insertText
#' @importFrom glue glue
#'
#' @examples
#' # prnt_rvals("dev")
prnt_rvals <- function(id) {
ui <- "\n\n#   # put in UI ----
bs4Dash::box(
title = shiny::tags$code('{id} reactive values'),
collapsible = TRUE,
collapsed = TRUE,
shiny::fluidRow(shiny::column(
width = 12,
shiny::verbatimTextOutput(
shiny::NS(namespace = id, id = '{id}'))
))
)"
server <- "\n\n# put in server ----
output${id} <- shiny::renderPrint({{
vals <- shiny::reactiveValuesToList(
x = input, all.names = TRUE)
print(vals)
}})\n\n"
rstudioapi::insertText(glue::glue(ui, server))
}
prnt_rvals("dev")
#' @param id namespace id
#'
#' @return code for UI and server components
#' @export prnt_rvals
#'
#' @importFrom rstudioapi insertText
#' @importFrom glue glue
#'
#' @examples
#' # prnt_rvals("dev")
prnt_rvals <- function(id) {
ui <- "\n\n# put in UI ----
bs4Dash::box(
title = shiny::tags$code('{id} reactive values'),
collapsible = TRUE,
collapsed = TRUE,
shiny::fluidRow(shiny::column(
width = 12,
shiny::verbatimTextOutput(
shiny::NS(namespace = id, id = '{id}'))
))
)"
server <- "\n\n# put in server ----
output${id} <- shiny::renderPrint({{
vals <- shiny::reactiveValuesToList(
x = input, all.names = TRUE)
print(vals)
}})\n\n"
rstudioapi::insertText(glue::glue(ui, server))
}
prnt_rvals("dev")
styler:::style_selection()
devtools::load_all()
devtools::load_all()
devtools::document()
library(JSbs4dash)
prnt_rvals("dev")
runApp('dev/navbar')
prnt_rvals("dev")
runApp('dev/navbar')
runApp('dev/navbar')
runApp('dev/navbar')
runApp('dev/navbar')
runApp('dev/navbar')
prnt_rvals("p1")
runApp('dev/navbar')
styler:::style_selection()
runApp('dev/navbar')
runApp('dev/navbar')
styler:::style_selection()
runApp('dev/navbar')
runApp('dev/navbar')
runApp('dev/navbar')
runApp('dev/navbar')
runApp('dev/navbar')
runApp('dev/navbar')
runApp('dev/navbar')
runApp('dev/navbar')
runApp('dev/navbar')
runApp('dev/navbar')
runApp('dev/navbar')
runApp('dev/navbar')
runApp('dev/navbar')
runApp('dev/navbar')
runApp('dev/navbar')
runApp('dev/navbar')
#' @param id namespace id
#'
#' @return code for UI and server components
#' @export prnt_rvals
#'
#' @importFrom rstudioapi insertText
#' @importFrom glue glue
#'
#' @examples
#' # prnt_rvals("dev")
prnt_rvals <- function(id) {
ui <- "\n\n# put in UI ----
bs4Dash::box(icon = shiny::icon('react'),
width = 12,
title =
shiny::tags$p(tags$code('{id}'),
tags$code('values')),
collapsible = TRUE,
collapsed = TRUE,
shiny::fluidRow(
shiny::column(
width = 12,
shiny::NS(namespace = id, id = '{id}')
)
)
)"
server <- "\n\n# put in server ----
output${id} <- shiny::renderPrint({{
vals <- shiny::reactiveValuesToList(
x = input, all.names = TRUE)
print(vals)
}})\n\n"
rstudioapi::insertText(glue::glue(ui, server))
}
prnt_rvals("dev")
#' @param id namespace id
#'
#' @return code for UI and server components
#' @export prnt_rvals
#'
#' @importFrom rstudioapi insertText
#' @importFrom glue glue
#'
#' @examples
#' # prnt_rvals("dev")
prnt_rvals <- function(id) {
ui <- "\n\n# put in UI ----
bs4Dash::box(icon = shiny::icon('react'),
width = 12,
title =
shiny::tags$p(tags$code('{id}'),
tags$code('values')),
collapsible = TRUE,
collapsed = TRUE,
shiny::fluidRow(
shiny::column(
width = 12,
shiny::NS(namespace = id, id = '{id}')
)
)
)"
server <- "\n\n# put in server ----
output${id} <- shiny::renderPrint({{
vals <- shiny::reactiveValuesToList(
x = input, all.names = TRUE)
print(vals)
}})\n\n"
rstudioapi::insertText(glue::glue(ui, server))
}
prnt_rvals("dev")
prnt_rvals("display")
runApp('dev/navbar')
runApp('dev/navbar')
#' @param id namespace id
#'
#' @return code for UI and server components
#' @export prnt_rvals
#'
#' @importFrom rstudioapi insertText
#' @importFrom glue glue
#'
#' @examples
#' # prnt_rvals("dev")
prnt_rvals <- function(id) {
ui <- "\n\n# put in UI ----
bs4Dash::box(icon = shiny::icon('react'),
width = 12,
title =
shiny::tags$p(tags$code('{id}'),
tags$code('values')),
collapsible = TRUE,
collapsed = TRUE,
shiny::fluidRow(
shiny::column(
width = 12,
shiny::verbatimTextOutput(
outputId = shiny::NS(namespace = id, id = 'display'))
)
)
)"
server <- "\n\n# put in server ----
output${id} <- shiny::renderPrint({{
vals <- shiny::reactiveValuesToList(
x = input, all.names = TRUE)
print(vals)
}})\n\n"
rstudioapi::insertText(glue::glue(ui, server))
}
prnt_rvals("dev")
prnt_rvals("dev")
#' @param id namespace id
#'
#' @return code for UI and server components
#' @export prnt_rvals
#'
#' @importFrom rstudioapi insertText
#' @importFrom glue glue
#'
#' @examples
#' # prnt_rvals("dev")
prnt_rvals <- function(id) {
ui <- "\n\n# put in UI ----
bs4Dash::box(icon = shiny::icon('react'),
width = 12,
title =
shiny::tags$p(tags$code('{id}'),
tags$code('values')),
collapsible = TRUE,
collapsed = TRUE,
shiny::fluidRow(
shiny::column(
width = 12,
shiny::verbatimTextOutput(
outputId = shiny::NS(namespace = id, id = '{id}'))
)
)
)"
server <- "\n\n# put in server ----
output${id} <- shiny::renderPrint({{
vals <- shiny::reactiveValuesToList(
x = input, all.names = TRUE)
print(vals)
}})\n\n"
rstudioapi::insertText(glue::glue(ui, server))
}
prnt_rvals("dev")
runApp('dev/navbar')
runApp('dev/navbar')
runApp('dev/navbar')
runApp('dev/navbar')
runApp('dev/navbar')
runApp('dev/navbar')
runApp('dev/navbar')
devtools::load_all()
devtools::document()
library(JSbs4dash)
prnt_rvals("dev")
install.packages(c("arrow", "bookdown", "chron", "Cubist", "emmeans", "epiR", "future", "geojsonio", "ggnetwork", "ggsci", "ggvis", "Hmisc", "MASS", "officer", "raster", "sets", "terra", "tibble"))
devtools::load_all()
devtools::document()
library(JSbs4dash)
shiny::runApp('dev/navbar')
runApp('dev/navbar')
runApp('dev/navbar')
runApp('dev/navbar')
runApp('dev/navbar')
runApp('dev/navbar')
runApp('dev/navbar')
runApp('dev/navbar')
runApp('dev/navbar')
runApp('dev/navbar')
styler:::style_active_file()
runApp('dev/navbar')
runApp('dev/tooltips/')
runApp('dev/tooltips')
runApp('dev/navbar')
